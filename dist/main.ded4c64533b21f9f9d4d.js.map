{"version":3,"file":"main.ded4c64533b21f9f9d4d.js","mappings":"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","sources":["webpack://spa-with-router/webpack/bootstrap","webpack://spa-with-router/webpack/runtime/global","webpack://spa-with-router/webpack/runtime/publicPath","webpack://spa-with-router/./src/router/constants/ROUTER_BUS.ts","webpack://spa-with-router/./src/router/elements/RouterLink.ts","webpack://spa-with-router/./src/router/elements/RouterOutlet.ts","webpack://spa-with-router/./src/router/models/RedirectPath.ts","webpack://spa-with-router/./src/router/models/AbstractPage.ts","webpack://spa-with-router/./src/router/Router.ts","webpack://spa-with-router/./src/pages/ProductsPage.ts","webpack://spa-with-router/./src/pages/ResidentialComplexesPage.ts","webpack://spa-with-router/./src/pages/HomePage.ts","webpack://spa-with-router/./src/index.ts","webpack://spa-with-router/./src/router/utils/createPathRegExp.ts","webpack://spa-with-router/./src/router/utils/resolvePath.ts","webpack://spa-with-router/./src/pages/CartPage.ts","webpack://spa-with-router/./src/pages/HistoryPage.ts","webpack://spa-with-router/./src/pages/ProductPage.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const ROUTER_BUS = new class RouterBus extends EventTarget {\n\n}();\n","import {ROUTER_BUS} from \"../constants\";\n\ncustomElements.define('router-link', class RouterLink extends HTMLAnchorElement {\n\n  connectedCallback(): void {\n    this.addEventListener('click', this.#onClick);\n  }\n\n  disconnectedCallback(): void {\n    this.removeEventListener('click', this.#onClick);\n  }\n\n  #onClick(event: MouseEvent) {\n    event.preventDefault();\n    ROUTER_BUS.dispatchEvent(new CustomEvent('navigate', {\n      detail: { path: new URL(this.href).pathname },\n    }));\n  }\n\n}, { extends: 'a' });\n","import {ROUTER_BUS} from \"../constants\";\n\nconst ROUTER_OUTLET_TEMPLATE = document.createElement('template');\nROUTER_OUTLET_TEMPLATE.innerHTML = `\n<style>\n.router-outlet {\n    position: relative;\n}\n</style>\n<div class=\"router-outlet\">\n    <slot name=\"page\"></slot>\n    <slot name=\"loader\"></slot>\n</div>\n`.trim();\n\n\ncustomElements.define('router-outlet', class RouterOutlet extends HTMLElement {\n  readonly #shadowRoot = this.attachShadow({ mode: \"open\" });\n  readonly #loader = document.createElement('div');\n  readonly #page = document.createElement('div');\n  #timerId: number | undefined;\n\n  readonly #onNavigateStart = (): void => {\n    clearTimeout(this.#timerId);\n    this.#timerId = setTimeout(() => {\n      this.appendChild(this.#loader);\n    }, 150) as unknown as number;\n  };\n\n  readonly #onNavigateCancel = (): void => {\n    this.#cancelLoader();\n  };\n\n  readonly #onNavigateEnd = (event: Event): void => {\n    const { detail: { content } } = event as CustomEvent<{ content: HTMLElement | DocumentFragment }>;\n\n    this.#page.replaceChildren(content);\n    this.appendChild(this.#page);\n    this.#cancelLoader();\n  };\n\n  constructor() {\n    super();\n    this.#shadowRoot.appendChild(ROUTER_OUTLET_TEMPLATE.content.cloneNode(true));\n    this.#loader.setAttribute('slot', 'loader');\n    this.#page.setAttribute('slot', 'page');\n    this.#loader.append(...this.childNodes);\n  }\n\n  connectedCallback(): void {\n    ROUTER_BUS.addEventListener('navigatestart', this.#onNavigateStart);\n    ROUTER_BUS.addEventListener('navigateend', this.#onNavigateEnd);\n    ROUTER_BUS.addEventListener('navigatecancel', this.#onNavigateCancel);\n  }\n\n  disconnectedCallback(): void {\n    ROUTER_BUS.removeEventListener('navigatestart', this.#onNavigateStart);\n    ROUTER_BUS.removeEventListener('navigateend', this.#onNavigateEnd);\n    ROUTER_BUS.removeEventListener('navigatecancel', this.#onNavigateCancel);\n  }\n\n  #cancelLoader(): void {\n    this.#loader.remove();\n    clearTimeout(this.#timerId);\n  }\n\n});\n","export class RedirectPath extends String {\n\n}\n","import {ActivatedRouteState} from \"./ActivatedRouteState\";\n\nexport abstract class AbstractPage {\n  readonly #state: ActivatedRouteState;\n\n  constructor(state: ActivatedRouteState) {\n    this.#state = state;\n  }\n\n  protected get routeState(): ActivatedRouteState {\n    return this.#state;\n  }\n\n  abstract render(): HTMLElement | DocumentFragment;\n\n  onRender(): void {\n\n  }\n\n  onDestroy(): void {\n\n  }\n}\n","import {\n  AbstractPage,\n  ActivatedRouteState,\n  Guard,\n  GuardClass,\n  GuardFunction,\n  PathParams,\n  RedirectPath,\n  ResolvedData,\n  Resolver,\n  ResolverClass,\n  ResolverFunction,\n  RouteConfig\n} from \"./models\";\nimport {createPathRegExp, resolvePath} from \"./utils\";\nimport {ROUTER_BUS} from \"./constants\";\n\nexport class Router {\n  readonly #routes = new Map<RegExp, RouteConfig>();\n  readonly #guardInstances = new WeakMap<GuardClass, Guard>();\n  readonly #resolverInstances = new WeakMap<ResolverClass, Resolver>();\n  #activePage: AbstractPage | null = null;\n\n  constructor(routes: RouteConfig[]) {\n    routes.forEach((route) => {\n      this.#routes.set(createPathRegExp(route.path), route);\n    });\n  }\n\n  navigate(path: string, doNotPush = false) {\n    const absolutePath = resolvePath(location.pathname, path);\n    const [route, params] = this.#findRoute(absolutePath);\n\n    if (route) {\n      void this.#handleRoute(absolutePath, route, params ?? {}, doNotPush);\n    }\n  }\n\n  start(): void {\n    this.navigate(location.pathname);\n    window.addEventListener('popstate', (event) => {\n      this.navigate(event.state.path ?? location.pathname, true);\n    });\n    ROUTER_BUS.addEventListener('navigate', (event: Event) => {\n      const {detail: {path}} = event as CustomEvent<{ path: string }>;\n\n      this.navigate(path);\n    });\n  }\n\n  #findRoute(path: string): [RouteConfig | null, PathParams | null] {\n    for (const [regExp, routeConfig] of this.#routes) {\n      const execResult = regExp.exec(path);\n\n      if (execResult) {\n        return [routeConfig, execResult.groups ?? null];\n      }\n    }\n\n    return [null, null];\n  }\n\n  async #handleRoute(path: string, route: RouteConfig, routeParams: PathParams, doNotPush: boolean) {\n    const activatedRouteState: ActivatedRouteState = {\n      url: new URL(path, location.origin).toString(),\n      params: routeParams,\n      resolvedData: null,\n    };\n\n    ROUTER_BUS.dispatchEvent(new CustomEvent('navigatestart'));\n\n    const guardResult = await this.#checkGuards(route, activatedRouteState);\n\n    if (!guardResult) {\n      ROUTER_BUS.dispatchEvent(new CustomEvent('navigatecancel'));\n      return;\n    }\n\n    if (guardResult instanceof RedirectPath) {\n      return this.navigate(guardResult.toString());\n    }\n\n    activatedRouteState.resolvedData = await this.#checkResolvers(route, activatedRouteState);\n\n    if (route.redirectTo) {\n      return this.navigate(route.redirectTo);\n    }\n\n    if (route.page) {\n      const page = new route.page(activatedRouteState);\n      const content = page.render();\n\n      this.#activePage?.onDestroy();\n      this.#activePage = page;\n      ROUTER_BUS.dispatchEvent(new CustomEvent('navigateend', {\n        detail: {content},\n      }));\n      this.#activePage?.onRender();\n\n      if (!doNotPush) {\n        history.pushState({path}, '', activatedRouteState.url);\n      }\n    }\n\n  }\n\n  async #checkGuards({guards}: RouteConfig, state: ActivatedRouteState): Promise<boolean | RedirectPath> {\n    if (!guards || !guards.length) {\n      return true;\n    }\n\n    for (const guard of guards) {\n      const result = await this.#invokeGuard(guard, state);\n\n      if (result !== true) {\n        return result;\n      }\n    }\n\n    return true;\n  }\n\n  async #checkResolvers({resolve}: RouteConfig, state: ActivatedRouteState): Promise<null | ResolvedData> {\n    if (!resolve) {\n      return null;\n    }\n\n    return Promise\n      .all(\n        Object\n          .entries(resolve)\n          .map(([name, resolver]) => {\n            return this.#invokeResolver(resolver, state).then((value) => [name, value]);\n          })\n      )\n      .then((resultEntries) => Object.fromEntries(resultEntries));\n  }\n\n  #invokeGuard(guard: GuardFunction | GuardClass, state: ActivatedRouteState) {\n    if (isClass(guard)) {\n      if (!this.#guardInstances.has(guard)) {\n        this.#guardInstances.set(guard, new guard());\n      }\n\n      return this.#guardInstances.get(guard)!.canActivate(state);\n    }\n\n    return guard(state);\n  }\n\n  async #invokeResolver(resolver: ResolverFunction | ResolverClass, state: ActivatedRouteState): Promise<unknown> {\n    if (isClass(resolver)) {\n      if (!this.#resolverInstances.has(resolver)) {\n        this.#resolverInstances.set(resolver, new resolver());\n      }\n\n      return this.#resolverInstances.get(resolver)!.resolve(state);\n    }\n\n    return resolver(state);\n  }\n}\n\nfunction isClass<T>(value: CallableFunction | { new(...args: any[]): T }): value is { new(...args: any[]): T } {\n  return typeof value === 'function' && /^class /.test(value.toString());\n}\n","import {AbstractPage} from \"../router\";\nimport template from './products.html';\n\nconst templEl = document.createElement('template');\ntemplEl.innerHTML = template;\n\ninterface ProductInfo {\n  id: number;\n  price: number;\n  title: string;\n}\n\nexport class ProductsPage extends AbstractPage {\n  render(): HTMLElement | DocumentFragment {\n\n    return templEl.content.cloneNode(true) as DocumentFragment;\n  }\n}\n","import {AbstractPage} from \"../router\";\nimport template from './residentialComplexes.html';\n\nconst templEl = document.createElement('template');\ntemplEl.innerHTML = template;\n\ninterface ProductInfo {\n  id: number;\n  price: number;\n  title: string;\n}\n\nexport class ResidentialComplexesPage extends AbstractPage {\n  render(): HTMLElement | DocumentFragment {\n    console.log(this.routeState.resolvedData);\n    return templEl.content.cloneNode(true) as DocumentFragment;\n  }\n}\n","import {AbstractPage} from \"../router\";\nimport template from './homePage.html';\n\nconst templEl = document.createElement('template');\ntemplEl.innerHTML = template;\n\ninterface ProductInfo {\n  id: number;\n  price: number;\n  title: string;\n}\n\nexport class HomePage extends AbstractPage {\n  render(): HTMLElement | DocumentFragment {\n    return templEl.content.cloneNode(true) as DocumentFragment;\n  }\n}\n","import {RedirectPath, Router} from \"./router\";\nimport {CartPage, HistoryPage, ProductPage, ProductsPage, ResidentialComplexesPage, HomePage} from \"./pages\";\n\nimport './styles/style.scss';\n import './files/images/logo-icon.png';  \n \nimport listPath from './list.json';\n\nconst appRouter = new Router([\n  {\n    path: '',\n    page: HomePage,\n    // redirectTo: '/products'\n  },\n  {\n    path: 'cart',\n    page: CartPage,\n  },\n  {\n    path: 'history',\n    page: HistoryPage,\n    guards: [\n      () => new Promise<RedirectPath>((resolve) => {\n        setTimeout(() => resolve(new RedirectPath('/')), 2_000);\n      })\n    ],\n  },\n  {\n    path: 'complexes',\n    page: ResidentialComplexesPage,\n    resolve: {  \n      productList: () => {\n        return {img: 'complexImg',\n        description: 'first test'}\n      },\n      complexesList: () => fetch(listPath).then(response => response.json()),\n    },\n  },\n  {\n    path: 'products/:productId',\n    page: ProductPage,\n  },\n]);\n\nappRouter.start();\n","export function createPathRegExp(pathTemplate: string): RegExp {\n  return new RegExp('/' + pathTemplate.replace(/:([A-z]+)/g, (_, paramName) => {\n    return `(?<${paramName}>[^?/]+)`;\n  }) + '$');\n}\n","export function resolvePath(currenAbsolutePath: string, relativePath: string) {\n  if (/^\\//.test(relativePath)) {\n    return relativePath;\n  }\n\n  return '/' + [currenAbsolutePath, '/', relativePath]\n    .join('')\n    .split(/\\/+/)\n    .reduce<string[]>((fragments, fragment) => {\n      if (fragment === '.') {\n        return fragments;\n      }\n\n      if (fragment === '..') {\n        fragments.pop();\n      } else if (fragment) {\n        fragments.push(fragment);\n      }\n\n      return fragments;\n    }, [])\n    .join('/');\n}\n","import {AbstractPage} from \"../router\";\n\nexport class CartPage extends AbstractPage {\n\n  render(): HTMLElement | DocumentFragment {\n    const content = document.createElement('div');\n\n    content.textContent = 'Cart';\n\n    return content;\n  }\n\n}\n","import {AbstractPage} from \"../router\";\n\nexport class HistoryPage extends AbstractPage {\n\n  render(): HTMLElement | DocumentFragment {\n    const content = document.createElement('div');\n\n    content.textContent = 'History';\n\n    return content;\n  }\n\n}\n","import {AbstractPage} from \"../router\";\n\nexport class ProductPage extends AbstractPage {\n\n  render(): HTMLElement | DocumentFragment {\n    const content = document.createElement('div');\n\n    content.textContent = `Product: ${this.routeState.params.productId}`;\n\n    return content;\n  }\n\n}\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","ROUTER_BUS","EventTarget","customElements","define","HTMLAnchorElement","connectedCallback","addEventListener","disconnectedCallback","removeEventListener","event","preventDefault","dispatchEvent","CustomEvent","detail","path","URL","href","pathname","extends","ROUTER_OUTLET_TEMPLATE","createElement","innerHTML","trim","HTMLElement","constructor","super","attachShadow","mode","clearTimeout","setTimeout","appendChild","content","replaceChildren","cloneNode","setAttribute","append","childNodes","remove","RedirectPath","String","state","routeState","onRender","onDestroy","isClass","value","test","toString","regExp","routeConfig","execResult","exec","groups","async","route","routeParams","doNotPush","activatedRouteState","url","origin","params","resolvedData","guardResult","navigate","redirectTo","page","render","history","pushState","guards","guard","result","resolve","Promise","all","Object","entries","map","name","resolver","then","resultEntries","fromEntries","has","set","get","canActivate","routes","Map","WeakMap","forEach","pathTemplate","RegExp","_","paramName","absolutePath","currenAbsolutePath","relativePath","join","split","reduce","fragments","fragment","pop","push","start","textContent","console","log","productList","img","description","complexesList","fetch","response","json","productId"],"sourceRoot":""}